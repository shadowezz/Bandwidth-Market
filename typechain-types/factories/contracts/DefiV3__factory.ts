/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DefiV3, DefiV3Interface } from "../../contracts/DefiV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalBandwidth",
        type: "uint256",
      },
      {
        internalType: "int128",
        name: "startingPrice",
        type: "int128",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "userAddress",
            type: "address",
          },
          {
            internalType: "int128",
            name: "allocation",
            type: "int128",
          },
        ],
        indexed: false,
        internalType: "struct DefiV3.Allocation[][48]",
        name: "allocation",
        type: "tuple[][48]",
      },
    ],
    name: "AllocateBandwidth",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allocation",
    outputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "int128",
        name: "allocation",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allocationBandwidth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "budgets",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "getMarketPrice",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketPrices",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "budget",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "startSlot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endSlot",
        type: "uint256",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pricePaid",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "spendingPerUser",
    outputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "int128",
        name: "spending",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBandwidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a9738038062001a97833981810160405281019062000037919062000144565b8160308190555060005b6030811015620000bd5781603182603081106200006357620000626200018b565b5b600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055508080620000b490620001e9565b91505062000041565b50505062000237565b600080fd5b6000819050919050565b620000e081620000cb565b8114620000ec57600080fd5b50565b6000815190506200010081620000d5565b92915050565b600081600f0b9050919050565b6200011e8162000106565b81146200012a57600080fd5b50565b6000815190506200013e8162000113565b92915050565b600080604083850312156200015e576200015d620000c6565b5b60006200016e85828601620000ef565b925050602062000181858286016200012d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620001f682620000cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200022c576200022b620001ba565b5b600182019050919050565b61185080620002476000396000f3fe6080604052600436106100865760003560e01c80637fbcebe2116100595780637fbcebe21461016e57806384d77ff5146101ab5780638928378e146101c2578063ca841b88146101ff578063e0ac4c4c1461023e57610086565b806314aebade1461008b5780636372ea04146100c857806369f0e05f146100f35780637248738514610130575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190611170565b61025a565b6040516100bf91906111b9565b60405180910390f35b3480156100d457600080fd5b506100dd610287565b6040516100ea91906111e3565b60405180910390f35b3480156100ff57600080fd5b5061011a60048036038101906101159190611170565b61028d565b60405161012791906111b9565b60405180910390f35b34801561013c57600080fd5b50610157600480360381019061015291906111fe565b6102c4565b60405161016592919061127f565b60405180910390f35b34801561017a57600080fd5b5061019560048036038101906101909190611170565b610335565b6040516101a291906111b9565b60405180910390f35b3480156101b757600080fd5b506101c061036c565b005b3480156101ce57600080fd5b506101e960048036038101906101e49190611170565b610972565b6040516101f691906111b9565b60405180910390f35b34801561020b57600080fd5b50610226600480360381019061022191906111fe565b6109f9565b604051610235939291906112a8565b60405180910390f35b6102586004803603810190610253919061130b565b610a70565b005b6031816030811061026a57600080fd5b60029182820401919006601002915054906101000a9004600f0b81565b60305481565b6079818154811061029d57600080fd5b9060005260206000209060029182820401919006601002915054906101000a9004600f0b81565b600082603081106102d457600080fd5b0181815481106102e357600080fd5b9060005260206000209060020201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a9004600f0b905082565b607a818154811061034557600080fd5b9060005260206000209060029182820401919006601002915054906101000a9004600f0b81565b60005b603281101561071e57610380610f47565b60005b603081101561057a5760005b604982603081106103a3576103a261135e565b5b0180549050811015610566576000604983603081106103c5576103c461135e565b5b0182815481106103d8576103d761135e565b5b906000526020600020906003020190506104b3607a8260000154815481106104035761040261135e565b5b90600052602060002090600291828204019190066010029054906101000a9004600f0b6104a26031866030811061043d5761043c61135e565b5b600291828204019190066010029054906101000a9004600f0b607985600001548154811061046e5761046d61135e565b5b90600052602060002090600291828204019190066010029054906101000a9004600f0b600f0b610deb90919063ffffffff16565b600f0b610e5690919063ffffffff16565b8160020160006101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555061052e8160020160009054906101000a9004600f0b8585603081106105185761051761135e565b5b6020020151600f0b610ee090919063ffffffff16565b8484603081106105415761054061135e565b5b6020020190600f0b9081600f0b8152505050808061055e906113bc565b91505061038f565b508080610572906113bc565b915050610383565b5080603190603061058c929190610f6a565b50607a600061059b9190611034565b60005b60308110156107095760005b604982603081106105be576105bd61135e565b5b01805490508110156106f5576000604983603081106105e0576105df61135e565b5b0182815481106105f3576105f261135e565b5b906000526020600020906003020160000154905061067f6031846030811061061e5761061d61135e565b5b600291828204019190066010029054906101000a9004600f0b607a838154811061064b5761064a61135e565b5b90600052602060002090600291828204019190066010029054906101000a9004600f0b600f0b610ee090919063ffffffff16565b607a82815481106106935761069261135e565b5b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055505080806106ed906113bc565b9150506105aa565b508080610701906113bc565b91505061059e565b50508080610716906113bc565b91505061036f565b5060008061072c919061105c565b60005b60308110156109295760005b6049826030811061074f5761074e61135e565b5b0180549050811015610915576000604983603081106107715761077061135e565b5b0182815481106107845761078361135e565b5b90600052602060002090600302019050600083603081106107a8576107a761135e565b5b0160405180604001604052808360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016108476031876030811061080b5761080a61135e565b5b600291828204019190066010029054906101000a9004600f0b8560020160009054906101000a9004600f0b600f0b610e5690919063ffffffff16565b600f0b815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff160217905550505050808061090d906113bc565b91505061073b565b508080610921906113bc565b91505061072f565b50607960006109389190611034565b7f02f0cf58d672edcd62bb79007ebe6e8175571a046a206f367d276ae6a6733a0c60006040516109689190611640565b60405180910390a1565b600081600011158015610986575060308211155b6109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bc906116bf565b60405180910390fd5b603182603081106109d9576109d861135e565b5b600291828204019190066010029054906101000a9004600f0b9050919050565b60498260308110610a0957600080fd5b018181548110610a1857600080fd5b9060005260206000209060030201600091509150508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a9004600f0b905083565b600083600f0b13610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad9061172b565b60405180910390fd5b81811015610af9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af090611797565b60405180910390fd5b60798390806001815401808255809150506001900390600052602060002090600291828204019190066010029091909190916101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff160217905550607a600090806001815401808255809150506001900390600052602060002090600291828204019190066010029091909190916101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555060006001607980549050610be091906117b7565b905060008390505b828111610de45760498160308110610c0357610c0261135e565b5b0160405180606001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000600f0b81525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055505050610d6f60318260308110610d0e57610d0d61135e565b5b600291828204019190066010029054906101000a9004600f0b607a8481548110610d3b57610d3a61135e565b5b90600052602060002090600291828204019190066010029054906101000a9004600f0b600f0b610ee090919063ffffffff16565b607a8381548110610d8357610d8261135e565b5b90600052602060002090600291828204019190066010026101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055508080610ddc906113bc565b915050610be8565b5050505050565b600080604083600f0b85600f0b02901d90507fffffffffffffffffffffffffffffffff80000000000000000000000000000000600f0b8112158015610e4357506f7fffffffffffffffffffffffffffffff600f0b8113155b610e4c57600080fd5b8091505092915050565b60008082600f0b1415610e6857600080fd5b600082600f0b604085600f0b901b81610e8457610e836117eb565b5b0590507fffffffffffffffffffffffffffffffff80000000000000000000000000000000600f0b8112158015610ecd57506f7fffffffffffffffffffffffffffffff600f0b8113155b610ed657600080fd5b8091505092915050565b60008082600f0b84600f0b0190507fffffffffffffffffffffffffffffffff80000000000000000000000000000000600f0b8112158015610f3457506f7fffffffffffffffffffffffffffffff600f0b8113155b610f3d57600080fd5b8091505092915050565b604051806106000160405280603090602082028036833780820191505090505090565b8260306001016002900481019282156110235791602002820160005b83821115610fe557835183826101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f01049283019260010302610f86565b80156110215782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f01049283019260010302610fe5565b505b509050611030919061106f565b5090565b508054600082556001016002900490600052602060002090810190611059919061106f565b50565b50806030019061106c919061108c565b50565b5b80821115611088576000816000905550600101611070565b5090565b5b808211156110ac57600081816110a391906110b0565b5060010161108d565b5090565b50805460008255600202906000526020600020908101906110d191906110d4565b50565b5b8082111561113157600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a8154906fffffffffffffffffffffffffffffffff0219169055506002016110d5565b5090565b600080fd5b6000819050919050565b61114d8161113a565b811461115857600080fd5b50565b60008135905061116a81611144565b92915050565b60006020828403121561118657611185611135565b5b60006111948482850161115b565b91505092915050565b600081600f0b9050919050565b6111b38161119d565b82525050565b60006020820190506111ce60008301846111aa565b92915050565b6111dd8161113a565b82525050565b60006020820190506111f860008301846111d4565b92915050565b6000806040838503121561121557611214611135565b5b60006112238582860161115b565b92505060206112348582860161115b565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112698261123e565b9050919050565b6112798161125e565b82525050565b60006040820190506112946000830185611270565b6112a160208301846111aa565b9392505050565b60006060820190506112bd60008301866111d4565b6112ca6020830185611270565b6112d760408301846111aa565b949350505050565b6112e88161119d565b81146112f357600080fd5b50565b600081359050611305816112df565b92915050565b60008060006060848603121561132457611323611135565b5b6000611332868287016112f6565b93505060206113438682870161115b565b92505060406113548682870161115b565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113c78261113a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113fa576113f961138d565b5b600182019050919050565b600060309050919050565b600081905092915050565b6000819050919050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061149661149183611456565b611463565b9050919050565b6114a68161125e565b82525050565b600081600f0b9050919050565b60006114cc6114c783611456565b6114ac565b9050919050565b6114dc8161119d565b82525050565b6040820160008083015490506114f781611483565b611504600086018261149d565b5060018301549050611515816114b9565b61152260208601826114d3565b5050505050565b600061153583836114e2565b60408301905092915050565b6000600282019050919050565b600061155982611425565b6115638185611430565b935061156e83611441565b8060005b8381101561159e57816115858882611529565b975061159083611541565b925050600181019050611572565b5085935050505092915050565b60006115b7838361154e565b905092915050565b6000600182019050919050565b60006115d782611405565b6115e18185611410565b9350836020820285016115f38561141b565b8060005b8581101561162e5784840389528161160f85826115ab565b945061161a836115bf565b925060208a019950506001810190506115f7565b50829750879550505050505092915050565b6000602082019050818103600083015261165a81846115cc565b905092915050565b600082825260208201905092915050565b7f536c6f74206e6565647320746f2062652076616c696400000000000000000000600082015250565b60006116a9601683611662565b91506116b482611673565b602082019050919050565b600060208201905081810360008301526116d88161169c565b9050919050565b7f427564676574206d757374206265206d6f7265207468616e2024300000000000600082015250565b6000611715601b83611662565b9150611720826116df565b602082019050919050565b6000602082019050818103600083015261174481611708565b9050919050565b7f456e64536c6f74206d757374206265203e3d207374617274536c6f7400000000600082015250565b6000611781601c83611662565b915061178c8261174b565b602082019050919050565b600060208201905081810360008301526117b081611774565b9050919050565b60006117c28261113a565b91506117cd8361113a565b9250828210156117e0576117df61138d565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122047caf4ace29fdb5a5e76e4eb58fd19eb1660478df319eb4d188234eb8b8351c264736f6c63430008090033";

type DefiV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DefiV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DefiV3__factory extends ContractFactory {
  constructor(...args: DefiV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _totalBandwidth: PromiseOrValue<BigNumberish>,
    startingPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DefiV3> {
    return super.deploy(
      _totalBandwidth,
      startingPrice,
      overrides || {}
    ) as Promise<DefiV3>;
  }
  override getDeployTransaction(
    _totalBandwidth: PromiseOrValue<BigNumberish>,
    startingPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _totalBandwidth,
      startingPrice,
      overrides || {}
    );
  }
  override attach(address: string): DefiV3 {
    return super.attach(address) as DefiV3;
  }
  override connect(signer: Signer): DefiV3__factory {
    return super.connect(signer) as DefiV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefiV3Interface {
    return new utils.Interface(_abi) as DefiV3Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DefiV3 {
    return new Contract(address, _abi, signerOrProvider) as DefiV3;
  }
}
