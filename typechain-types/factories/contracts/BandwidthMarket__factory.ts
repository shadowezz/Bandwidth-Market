/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BandwidthMarket,
  BandwidthMarketInterface,
} from "../../contracts/BandwidthMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_links",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_timeInterval",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[][]",
        name: "bandwidthAllocated",
        type: "uint256[][]",
      },
      {
        indexed: false,
        internalType: "uint256[][]",
        name: "users",
        type: "uint256[][]",
      },
    ],
    name: "AllocateBandwidth",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "budgetAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "budgets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "budget",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "targetResources",
        type: "uint256[][]",
      },
    ],
    name: "makePurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resourcesRequestedPerUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "purchaseId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "subBudgets",
        type: "uint256[]",
      },
    ],
    name: "subBudgetUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "terminateRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usersRequestedPerResource",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002116380380620021168339818101604052810190620000379190620003f4565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060018190555080426200008c919062000489565b60028190555060006001905060005b8351811015620001b5576003848281518110620000bd57620000bc620004e6565b5b602002602001015190806001815401808255809150506001900390600052602060002001600090919091909150556007600067ffffffffffffffff8111156200010b576200010a6200025a565b5b6040519080825280602002602001820160405280156200013a5781602001602082028036833780820191505090505b5090806001815401808255809150506001900390600052602060002001600090919091909150908051906020019062000175929190620001bf565b5060048290806001815401808255809150506001900390600052602060002001600090919091909150558080620001ac9062000515565b9150506200009b565b5050505062000563565b828054828255906000526020600020908101928215620001fe579160200282015b82811115620001fd578251825591602001919060010190620001e0565b5b5090506200020d919062000211565b5090565b5b808211156200022c57600081600090555060010162000212565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002948262000249565b810181811067ffffffffffffffff82111715620002b657620002b56200025a565b5b80604052505050565b6000620002cb62000230565b9050620002d9828262000289565b919050565b600067ffffffffffffffff821115620002fc57620002fb6200025a565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b620003278162000312565b81146200033357600080fd5b50565b60008151905062000347816200031c565b92915050565b6000620003646200035e84620002de565b620002bf565b905080838252602082019050602084028301858111156200038a57620003896200030d565b5b835b81811015620003b75780620003a2888262000336565b8452602084019350506020810190506200038c565b5050509392505050565b600082601f830112620003d957620003d862000244565b5b8151620003eb8482602086016200034d565b91505092915050565b600080604083850312156200040e576200040d6200023a565b5b600083015167ffffffffffffffff8111156200042f576200042e6200023f565b5b6200043d85828601620003c1565b9250506020620004508582860162000336565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620004968262000312565b9150620004a38362000312565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004db57620004da6200045a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000620005228262000312565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200055857620005576200045a565b5b600182019050919050565b611ba380620005736000396000f3fe60806040526004361061007b5760003560e01c80639314f3a51161004e5780639314f3a5146101535780639692b06214610190578063a0f2f71f146101a7578063a91f6b48146101d05761007b565b806314aebade146100805780632ad04a62146100bd57806332912553146100fa57806369f0e05f14610116575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190611021565b61020d565b6040516100b4919061105d565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190611078565b610231565b6040516100f1919061105d565b60405180910390f35b610114600480360381019061010f91906112f2565b61026e565b005b34801561012257600080fd5b5061013d60048036038101906101389190611021565b610652565b60405161014a919061105d565b60405180910390f35b34801561015f57600080fd5b5061017a60048036038101906101759190611078565b610676565b604051610187919061105d565b60405180910390f35b34801561019c57600080fd5b506101a561069b565b005b3480156101b357600080fd5b506101ce60048036038101906101c9919061134e565b610a56565b005b3480156101dc57600080fd5b506101f760048036038101906101f291906113aa565b610e0c565b604051610204919061105d565b60405180910390f35b6004818154811061021d57600080fd5b906000526020600020016000915090505481565b6007828154811061024157600080fd5b90600052602060002001818154811061025957600080fd5b90600052602060002001600091509150505481565b813410156102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a890611480565b60405180910390fd5b600060058054905090506005839080600181540180825580915050600190039060005260206000200160009091909190915055336009600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600882908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610371929190610e62565b506000805b835181101561043357838181518110610392576103916114a0565b5b60200260200101516001815181106103ad576103ac6114a0565b5b602002602001015160048583815181106103ca576103c96114a0565b5b60200260200101516000815181106103e5576103e46114a0565b5b6020026020010151815481106103fe576103fd6114a0565b5b906000526020600020015461041391906114fe565b8261041e9190611558565b9150808061042b906115ae565b915050610376565b506000805b8451811015610612576000858281518110610456576104556114a0565b5b6020026020010151600081518110610471576104706114a0565b5b6020026020010151905060008683815181106104905761048f6114a0565b5b60200260200101516001815181106104ab576104aa6114a0565b5b60200260200101519050600782815481106104c9576104c86114a0565b5b9060005260206000200186908060018154018082558091505060019003906000526020600020016000909190919091505560006001885161050a91906115f7565b84141561052457848961051d91906115f7565b9050610575565b85828a6004868154811061053b5761053a6114a0565b5b906000526020600020015461055091906114fe565b61055a91906114fe565b610564919061165a565b905080856105729190611558565b94505b8060066000858152602001908152602001600020600089815260200190815260200160002081905550600383815481106105b2576105b16114a0565b5b9060005260206000200154816105c8919061165a565b600484815481106105dc576105db6114a0565b5b9060005260206000200160008282546105f59190611558565b92505081905550505050808061060a906115ae565b915050610438565b507ff10976e9592d31e4fbd47d858e7642bc8fcab1f0b1ef290e405c8f108cc5624160046040516106439190611799565b60405180910390a15050505050565b6005818154811061066257600080fd5b906000526020600020016000915090505481565b6006602052816000526040600020602052806000526040600020600091509150505481565b4260025411156106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d79061182d565b60405180910390fd5b6000600380549050905060008167ffffffffffffffff811115610706576107056110ce565b5b60405190808252806020026020018201604052801561073957816020015b60608152602001906001900390816107245790505b50905060008267ffffffffffffffff811115610758576107576110ce565b5b60405190808252806020026020018201604052801561078b57816020015b60608152602001906001900390816107765790505b50905060005b83811015610999576000600782815481106107af576107ae6114a0565b5b9060005260206000200180549050905060008167ffffffffffffffff8111156107db576107da6110ce565b5b6040519080825280602002602001820160405280156108095781602001602082028036833780820191505090505b50905060008267ffffffffffffffff811115610828576108276110ce565b5b6040519080825280602002602001820160405280156108565781602001602082028036833780820191505090505b50905060005b838110156109445760006007868154811061087a576108796114a0565b5b906000526020600020018281548110610896576108956114a0565b5b90600052602060002001549050600486815481106108b7576108b66114a0565b5b9060005260206000200154600660008881526020019081526020016000206000838152602001908152602001600020546108f1919061165a565b848381518110610904576109036114a0565b5b60200260200101818152505080838381518110610924576109236114a0565b5b60200260200101818152505050808061093c906115ae565b91505061085c565b5081868581518110610959576109586114a0565b5b602002602001018190525080858581518110610978576109776114a0565b5b60200260200101819052505050508080610991906115ae565b915050610791565b507ffc34ab54eaf4e470d6e598e6c2fc84089ec3b6c96e2757e965b42917d6cc84fa82826040516109cb9291906119a6565b60405180910390a1600154426109e19190611558565b600281905550600560006109f59190610ec2565b60086000610a039190610ee3565b60005b600380549050811015610a505760078181548110610a2757610a266114a0565b5b906000526020600020016000610a3d9190610ec2565b8080610a48906115ae565b915050610a06565b50505050565b60058054905082108015610ac857503373ffffffffffffffffffffffffffffffffffffffff166009600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afe90611a29565b60405180910390fd5b6000805b8251811015610b4f57828181518110610b2757610b266114a0565b5b602002602001015182610b3a9190611558565b91508080610b47906115ae565b915050610b0b565b5060058381548110610b6457610b636114a0565b5b9060005260206000200154811115610bb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba890611abb565b60405180910390fd5b60088381548110610bc557610bc46114a0565b5b9060005260206000200180549050825114610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90611b4d565b60405180910390fd5b60005b8251811015610dce57600060088581548110610c3757610c366114a0565b5b906000526020600020018281548110610c5357610c526114a0565b5b90600052602060002001600081548110610c7057610c6f6114a0565b5b9060005260206000200154905060038181548110610c9157610c906114a0565b5b9060005260206000200154848381518110610caf57610cae6114a0565b5b6020026020010151610cc1919061165a565b60048281548110610cd557610cd46114a0565b5b906000526020600020016000828254610cee9190611558565b9250508190555060038181548110610d0957610d086114a0565b5b906000526020600020015460066000838152602001908152602001600020600087815260200190815260200160002054610d43919061165a565b60048281548110610d5757610d566114a0565b5b906000526020600020016000828254610d7091906115f7565b92505081905550838281518110610d8a57610d896114a0565b5b602002602001015160066000838152602001908152602001600020600087815260200190815260200160002081905550508080610dc6906115ae565b915050610c18565b507ff10976e9592d31e4fbd47d858e7642bc8fcab1f0b1ef290e405c8f108cc562416004604051610dff9190611799565b60405180910390a1505050565b60088381548110610e1c57600080fd5b906000526020600020018281548110610e3457600080fd5b906000526020600020018181548110610e4c57600080fd5b9060005260206000200160009250925050505481565b828054828255906000526020600020908101928215610eb1579160200282015b82811115610eb0578251829080519060200190610ea0929190610f04565b5091602001919060010190610e82565b5b509050610ebe9190610f51565b5090565b5080546000825590600052602060002090810190610ee09190610f75565b50565b5080546000825590600052602060002090810190610f019190610f92565b50565b828054828255906000526020600020908101928215610f40579160200282015b82811115610f3f578251825591602001919060010190610f24565b5b509050610f4d9190610f75565b5090565b5b80821115610f715760008181610f689190610ec2565b50600101610f52565b5090565b5b80821115610f8e576000816000905550600101610f76565b5090565b5b80821115610fb25760008181610fa99190610fb6565b50600101610f93565b5090565b5080546000825590600052602060002090810190610fd49190610f51565b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ffe81610feb565b811461100957600080fd5b50565b60008135905061101b81610ff5565b92915050565b60006020828403121561103757611036610fe1565b5b60006110458482850161100c565b91505092915050565b61105781610feb565b82525050565b6000602082019050611072600083018461104e565b92915050565b6000806040838503121561108f5761108e610fe1565b5b600061109d8582860161100c565b92505060206110ae8582860161100c565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611106826110bd565b810181811067ffffffffffffffff82111715611125576111246110ce565b5b80604052505050565b6000611138610fd7565b905061114482826110fd565b919050565b600067ffffffffffffffff821115611164576111636110ce565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff821115611195576111946110ce565b5b602082029050602081019050919050565b60006111b96111b48461117a565b61112e565b905080838252602082019050602084028301858111156111dc576111db611175565b5b835b8181101561120557806111f1888261100c565b8452602084019350506020810190506111de565b5050509392505050565b600082601f830112611224576112236110b8565b5b81356112348482602086016111a6565b91505092915050565b600061125061124b84611149565b61112e565b9050808382526020820190506020840283018581111561127357611272611175565b5b835b818110156112ba57803567ffffffffffffffff811115611298576112976110b8565b5b8086016112a5898261120f565b85526020850194505050602081019050611275565b5050509392505050565b600082601f8301126112d9576112d86110b8565b5b81356112e984826020860161123d565b91505092915050565b6000806040838503121561130957611308610fe1565b5b60006113178582860161100c565b925050602083013567ffffffffffffffff81111561133857611337610fe6565b5b611344858286016112c4565b9150509250929050565b6000806040838503121561136557611364610fe1565b5b60006113738582860161100c565b925050602083013567ffffffffffffffff81111561139457611393610fe6565b5b6113a08582860161120f565b9150509250929050565b6000806000606084860312156113c3576113c2610fe1565b5b60006113d18682870161100c565b93505060206113e28682870161100c565b92505060406113f38682870161100c565b9150509250925092565b600082825260208201905092915050565b7f45746865722073656e74206d757374206265206174206c6561737420796f757260008201527f2062756467657400000000000000000000000000000000000000000000000000602082015250565b600061146a6027836113fd565b91506114758261140e565b604082019050919050565b600060208201905081810360008301526114998161145d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061150982610feb565b915061151483610feb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561154d5761154c6114cf565b5b828202905092915050565b600061156382610feb565b915061156e83610feb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115a3576115a26114cf565b5b828201905092915050565b60006115b982610feb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115ec576115eb6114cf565b5b600182019050919050565b600061160282610feb565b915061160d83610feb565b9250828210156116205761161f6114cf565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061166582610feb565b915061167083610feb565b9250826116805761167f61162b565b5b828204905092915050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b6116c581610feb565b82525050565b60006116d783836116bc565b60208301905092915050565b60008160001c9050919050565b6000819050919050565b600061170d611708836116e3565b6116f0565b9050919050565b600061172082546116fa565b9050919050565b6000600182019050919050565b600061173f8261168b565b6117498185611696565b9350611754836116a7565b8060005b8381101561178c5761176982611714565b61177388826116cb565b975061177e83611727565b925050600181019050611758565b5085935050505092915050565b600060208201905081810360008301526117b38184611734565b905092915050565b7f54696d6520746f207465726d696e6174652063757272656e7420726f756e642060008201527f686173206e6f74206265656e2072656163686564000000000000000000000000602082015250565b60006118176034836113fd565b9150611822826117bb565b604082019050919050565b600060208201905081810360008301526118468161180a565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000602082019050919050565b60006118bd82611879565b6118c78185611884565b93506118d283611895565b8060005b838110156119035781516118ea88826116cb565b97506118f5836118a5565b9250506001810190506118d6565b5085935050505092915050565b600061191c83836118b2565b905092915050565b6000602082019050919050565b600061193c8261184d565b6119468185611858565b93508360208202850161195885611869565b8060005b8581101561199457848403895281516119758582611910565b945061198083611924565b925060208a0199505060018101905061195c565b50829750879550505050505092915050565b600060408201905081810360008301526119c08185611931565b905081810360208301526119d48184611931565b90509392505050565b7f496e76616c696420757365720000000000000000000000000000000000000000600082015250565b6000611a13600c836113fd565b9150611a1e826119dd565b602082019050919050565b60006020820190508181036000830152611a4281611a06565b9050919050565b7f546f74616c206275646765742063616e6e6f74206265206d6f7265207468616e60008201527f206f726967696e616c2062756467657400000000000000000000000000000000602082015250565b6000611aa56030836113fd565b9150611ab082611a49565b604082019050919050565b60006020820190508181036000830152611ad481611a98565b9050919050565b7f496e76616c6964206e756d626572206f66207265736f757263657320746f207560008201527f7064617465000000000000000000000000000000000000000000000000000000602082015250565b6000611b376025836113fd565b9150611b4282611adb565b604082019050919050565b60006020820190508181036000830152611b6681611b2a565b905091905056fea2646970667358221220a57a55aa76085b886990836cbe25c5c78b5a146ae4e3bb13ddf0a382bc21224b64736f6c63430008090033";

type BandwidthMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BandwidthMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BandwidthMarket__factory extends ContractFactory {
  constructor(...args: BandwidthMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _links: PromiseOrValue<BigNumberish>[],
    _timeInterval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BandwidthMarket> {
    return super.deploy(
      _links,
      _timeInterval,
      overrides || {}
    ) as Promise<BandwidthMarket>;
  }
  override getDeployTransaction(
    _links: PromiseOrValue<BigNumberish>[],
    _timeInterval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_links, _timeInterval, overrides || {});
  }
  override attach(address: string): BandwidthMarket {
    return super.attach(address) as BandwidthMarket;
  }
  override connect(signer: Signer): BandwidthMarket__factory {
    return super.connect(signer) as BandwidthMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BandwidthMarketInterface {
    return new utils.Interface(_abi) as BandwidthMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BandwidthMarket {
    return new Contract(address, _abi, signerOrProvider) as BandwidthMarket;
  }
}
