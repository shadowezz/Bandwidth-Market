/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DefiAgent,
  DefiAgentInterface,
} from "../../../contracts/DefiV4.sol/DefiAgent";

const _abi = [
  {
    inputs: [
      {
        internalType: "int128",
        name: "_budget",
        type: "int128",
      },
      {
        internalType: "address",
        name: "_mainContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startSlot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endSlot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getMarketPrices",
    outputs: [
      {
        internalType: "int128[48]",
        name: "",
        type: "int128[48]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "improveAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketPrices",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128[48]",
        name: "newMarketPrices",
        type: "int128[48]",
      },
      {
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "notifyPriceChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scheduleAion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051620018c8380380620018c8833981810160405281019062000029919062000456565b846000806101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260028190555081600381905550600454905073cbe7ab529a147149b1cf982c3a169f728bc0c3ca600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601e60006101000a81548160ff021916908315150217905550620001386200014360201b60201c565b5050505050620007d6565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638abdf5aa6040518163ffffffff1660e01b815260040160206040518083038186803b158015620001ae57600080fd5b505afa158015620001c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e99190620004de565b66071afd498d0000620001fd91906200053f565b90504781106200020e575062000371565b60007f049be38c44fe6cbc6b00d365fb24a4c40a0db089b219907187b37a58fb01b31a604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dea8dc4f83600f42620002e491906200053f565b306000621e8480633b9aca008860016040518963ffffffff1660e01b815260040162000317979695949392919062000752565b6020604051808303818588803b1580156200033157600080fd5b505af115801562000346573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200036d9190620004de565b5050505b565b600080fd5b600081600f0b9050919050565b620003908162000378565b81146200039c57600080fd5b50565b600081519050620003b08162000385565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003e382620003b6565b9050919050565b620003f581620003d6565b81146200040157600080fd5b50565b6000815190506200041581620003ea565b92915050565b6000819050919050565b62000430816200041b565b81146200043c57600080fd5b50565b600081519050620004508162000425565b92915050565b600080600080600060a0868803121562000475576200047462000373565b5b600062000485888289016200039f565b9550506020620004988882890162000404565b9450506040620004ab888289016200043f565b9350506060620004be888289016200043f565b9250506080620004d1888289016200043f565b9150509295509295909350565b600060208284031215620004f757620004f662000373565b5b600062000507848285016200043f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200054c826200041b565b915062000559836200041b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000591576200059062000510565b5b828201905092915050565b620005a7816200041b565b82525050565b620005b881620003d6565b82525050565b6000819050919050565b6000819050919050565b6000620005f3620005ed620005e784620005be565b620005c8565b6200041b565b9050919050565b6200060581620005d2565b82525050565b6000819050919050565b600062000636620006306200062a846200060b565b620005c8565b6200041b565b9050919050565b620006488162000615565b82525050565b6000819050919050565b600062000679620006736200066d846200064e565b620005c8565b6200041b565b9050919050565b6200068b8162000658565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620006cd578082015181840152602081019050620006b0565b83811115620006dd576000848401525b50505050565b6000601f19601f8301169050919050565b6000620007018262000691565b6200070d81856200069c565b93506200071f818560208601620006ad565b6200072a81620006e3565b840191505092915050565b60008115159050919050565b6200074c8162000735565b82525050565b600060e08201905062000769600083018a6200059c565b620007786020830189620005ad565b620007876040830188620005fa565b6200079660608301876200063d565b620007a5608083018662000680565b81810360a0830152620007b98185620006f4565b9050620007ca60c083018462000741565b98975050505050505050565b6110e280620007e66000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063022417391461005c578063049be38c1461007a57806314aebade1461008457806366c69088146100b4578063a4b11015146100d0575b600080fd5b6100646100da565b6040516100719190610957565b60405180910390f35b61008261014b565b005b61009e600480360381019061009991906109b8565b610387565b6040516100ab91906109f4565b60405180910390f35b6100ce60048036038101906100c99190610be0565b6103b4565b005b6100d8610419565b005b6100e2610795565b6006603080602002604051908101604052809291908260308015610141576020028201916000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f0104928301926001038202915080841161010a5790505b5050505050905090565b6000600160025460035461015f9190610c51565b6101699190610c85565b67ffffffffffffffff81111561018257610181610a25565b5b6040519080825280602002602001820160405280156101b05781602001602082028036833780820191505090505b50905060008060025490505b600354811161021c57610207600682603081106101dc576101db610cdb565b5b600291828204019190066010029054906101000a9004600f0b83600f0b61063990919063ffffffff16565b9150808061021490610d0a565b9150506101bc565b50600081600f0b141561023257610231610d53565b5b60005b82518110156102e9576102af60008054906101000a9004600f0b61029e846006600254866102639190610c85565b6030811061027457610273610cdb565b5b600291828204019190066010029054906101000a9004600f0b600f0b6106a090919063ffffffff16565b600f0b61072a90919063ffffffff16565b8382815181106102c2576102c1610cdb565b5b6020026020010190600f0b9081600f0b8152505080806102e190610d0a565b915050610235565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd86a03c836002546040518363ffffffff1660e01b8152600401610349929190610e28565b600060405180830381600087803b15801561036357600080fd5b505af1158015610377573d6000803e3d6000fd5b50505050610383610419565b5050565b6006816030811061039757600080fd5b60029182820401919006601002915054906101000a9004600f0b81565b8160069060306103c59291906107b8565b503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610415576001601e60006101000a81548160ff0219169083151502179055505b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638abdf5aa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048357600080fd5b505afa158015610497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bb9190610e6d565b66071afd498d00006104cd9190610c85565b90504781106104dc5750610637565b60007f049be38c44fe6cbc6b00d365fb24a4c40a0db089b219907187b37a58fb01b31a604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dea8dc4f83600f426105b09190610c85565b306000621e8480633b9aca008860016040518963ffffffff1660e01b81526004016105e19796959493929190611007565b6020604051808303818588803b1580156105fa57600080fd5b505af115801561060e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106339190610e6d565b5050505b565b60008082600f0b84600f0b0190507fffffffffffffffffffffffffffffffff80000000000000000000000000000000600f0b811215801561068d57506f7fffffffffffffffffffffffffffffff600f0b8113155b61069657600080fd5b8091505092915050565b60008082600f0b14156106b257600080fd5b600082600f0b604085600f0b901b816106ce576106cd61107d565b5b0590507fffffffffffffffffffffffffffffffff80000000000000000000000000000000600f0b811215801561071757506f7fffffffffffffffffffffffffffffff600f0b8113155b61072057600080fd5b8091505092915050565b600080604083600f0b85600f0b02901d90507fffffffffffffffffffffffffffffffff80000000000000000000000000000000600f0b811215801561078257506f7fffffffffffffffffffffffffffffff600f0b8113155b61078b57600080fd5b8091505092915050565b604051806106000160405280603090602082028036833780820191505090505090565b8260306001016002900481019282156108715791602002820160005b8382111561083357835183826101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f010492830192600103026107d4565b801561086f5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f01049283019260010302610833565b505b50905061087e9190610882565b5090565b5b8082111561089b576000816000905550600101610883565b5090565b600060309050919050565b600081905092915050565b6000819050919050565b600081600f0b9050919050565b6108d5816108bf565b82525050565b60006108e783836108cc565b60208301905092915050565b6000602082019050919050565b6109098161089f565b61091381846108aa565b925061091e826108b5565b8060005b8381101561094f57815161093687826108db565b9650610941836108f3565b925050600181019050610922565b505050505050565b60006106008201905061096d6000830184610900565b92915050565b6000604051905090565b600080fd5b6000819050919050565b61099581610982565b81146109a057600080fd5b50565b6000813590506109b28161098c565b92915050565b6000602082840312156109ce576109cd61097d565b5b60006109dc848285016109a3565b91505092915050565b6109ee816108bf565b82525050565b6000602082019050610a0960008301846109e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a5d82610a14565b810181811067ffffffffffffffff82111715610a7c57610a7b610a25565b5b80604052505050565b6000610a8f610973565b9050610a9b8282610a54565b919050565b600067ffffffffffffffff821115610abb57610aba610a25565b5b602082029050919050565b600080fd5b610ad4816108bf565b8114610adf57600080fd5b50565b600081359050610af181610acb565b92915050565b6000610b0a610b0584610aa0565b610a85565b90508060208402830185811115610b2457610b23610ac6565b5b835b81811015610b4d5780610b398882610ae2565b845260208401935050602081019050610b26565b5050509392505050565b600082601f830112610b6c57610b6b610a0f565b5b6030610b79848285610af7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bad82610b82565b9050919050565b610bbd81610ba2565b8114610bc857600080fd5b50565b600081359050610bda81610bb4565b92915050565b6000806106208385031215610bf857610bf761097d565b5b6000610c0685828601610b57565b925050610600610c1885828601610bcb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5c82610982565b9150610c6783610982565b925082821015610c7a57610c79610c22565b5b828203905092915050565b6000610c9082610982565b9150610c9b83610982565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cd057610ccf610c22565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d1582610982565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d4857610d47610c22565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000602082019050919050565b6000610dc682610d82565b610dd08185610d8d565b9350610ddb83610d9e565b8060005b83811015610e0c578151610df388826108db565b9750610dfe83610dae565b925050600181019050610ddf565b5085935050505092915050565b610e2281610982565b82525050565b60006040820190508181036000830152610e428185610dbb565b9050610e516020830184610e19565b9392505050565b600081519050610e678161098c565b92915050565b600060208284031215610e8357610e8261097d565b5b6000610e9184828501610e58565b91505092915050565b610ea381610ba2565b82525050565b6000819050919050565b6000819050919050565b6000610ed8610ed3610ece84610ea9565b610eb3565b610982565b9050919050565b610ee881610ebd565b82525050565b6000819050919050565b6000610f13610f0e610f0984610eee565b610eb3565b610982565b9050919050565b610f2381610ef8565b82525050565b6000819050919050565b6000610f4e610f49610f4484610f29565b610eb3565b610982565b9050919050565b610f5e81610f33565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f9e578082015181840152602081019050610f83565b83811115610fad576000848401525b50505050565b6000610fbe82610f64565b610fc88185610f6f565b9350610fd8818560208601610f80565b610fe181610a14565b840191505092915050565b60008115159050919050565b61100181610fec565b82525050565b600060e08201905061101c600083018a610e19565b6110296020830189610e9a565b6110366040830188610edf565b6110436060830187610f1a565b6110506080830186610f55565b81810360a08301526110628185610fb3565b905061107160c0830184610ff8565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212205ef109e267329447ac9abcddabc959e0af3a2bcecb16e55dbd9cf709c895cdbe64736f6c63430008090033";

type DefiAgentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DefiAgentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DefiAgent__factory extends ContractFactory {
  constructor(...args: DefiAgentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _budget: PromiseOrValue<BigNumberish>,
    _mainContractAddress: PromiseOrValue<string>,
    _startSlot: PromiseOrValue<BigNumberish>,
    _endSlot: PromiseOrValue<BigNumberish>,
    _interval: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<DefiAgent> {
    return super.deploy(
      _budget,
      _mainContractAddress,
      _startSlot,
      _endSlot,
      _interval,
      overrides || {}
    ) as Promise<DefiAgent>;
  }
  override getDeployTransaction(
    _budget: PromiseOrValue<BigNumberish>,
    _mainContractAddress: PromiseOrValue<string>,
    _startSlot: PromiseOrValue<BigNumberish>,
    _endSlot: PromiseOrValue<BigNumberish>,
    _interval: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _budget,
      _mainContractAddress,
      _startSlot,
      _endSlot,
      _interval,
      overrides || {}
    );
  }
  override attach(address: string): DefiAgent {
    return super.attach(address) as DefiAgent;
  }
  override connect(signer: Signer): DefiAgent__factory {
    return super.connect(signer) as DefiAgent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefiAgentInterface {
    return new utils.Interface(_abi) as DefiAgentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DefiAgent {
    return new Contract(address, _abi, signerOrProvider) as DefiAgent;
  }
}
